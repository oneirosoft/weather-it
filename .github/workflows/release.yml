name: Release

on:
  push:
    tags:
      - "v*.*.*"

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Build release binary
        run: cargo build --release

      - name: Prepare artifact (macos)
        if: matrix.os == 'macos-latest'
        run: |
          mkdir -p dist/macos
          cp target/release/weather dist/macos/weather
        shell: bash

      - name: Prepare artifact (linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          mkdir -p dist/linux
          cp target/release/weather dist/linux/weather
        shell: bash

      - name: Prepare artifact (windows)
        if: matrix.os == 'windows-latest'
        run: |
          mkdir -p dist/windows
          cp target/release/weather.exe dist/windows/weather.exe
        shell: bash

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: weather-${{ matrix.os }}
          path: dist/*

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Archive macos binary
        run: |
          cd ./artifacts/weather-macos-latest/macos
          zip -r $GITHUB_WORKSPACE/macos.zip weather
        shell: bash

      - name: Archive linux binary
        run: |
          cd ./artifacts/weather-ubuntu-latest/linux
          zip -r $GITHUB_WORKSPACE/linux.zip weather
        shell: bash

      - name: Archive windows binary
        run: |
          cd ./artifacts/weather-windows-latest/windows
          zip -r $GITHUB_WORKSPACE/windows.zip weather.exe
        shell: bash

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            ./macos.zip
            ./linux.zip
            ./windows.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
